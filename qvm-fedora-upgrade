#!/bin/bash
#
# Qubes OS Fedora Template Upgrade Script
# https://www.kennethrrosen.cloud
#
# Copyright (C) 2024 by Kenneth R. Rosen kennethrrosen@proton.me
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

set -o noglob

PREFIX="$(tput setaf 7)$(tput bold)"
YELLOW="$(tput setaf 3)$(tput bold)"
POSTFIX="$(tput sgr0)"

usage() {
    cat >&2 <<EOF
Usage: ${0##*/} [OPTION]... TEMPLATE...

A script for upgrading Fedora templates in Qubes OS.

Options:
  -h, --help      Display this help and exit.
  TEMPLATE        Name of the template(s) to upgrade. Multiple templates can be specified.

Examples:
  ${0##*/} fedora-33                 Upgrade a single template named fedora-33.
  ${0##*/} fedora-33 fedora-34       Upgrade multiple templates.

EOF
}

while getopts ":h" opt; do
    case ${opt} in
        h )
            usage
            exit 0
            ;;
        \? )
            echo "Invalid Option: -$OPTARG" 1>&2
            usage
            exit 1
            ;;
        : )
            echo "Invalid Option: -$OPTARG requires an argument" 1>&2
            usage
            exit 1
            ;;
    esac
done
shift $((OPTIND -1))

message() {
    echo "${PREFIX}${1}${POSTFIX}"
}

upgrade_template() {
    local template=$1
    local proceed=$2
    local clone=$3
    local new_template_name=$4

    if ! qvm-ls | grep -qw "$template"; then
        message "Template $template does not exist."
        exit 1
    fi

    local current_version=$(qvm-run -p $template "cat /etc/fedora-release")
    local current_num=$(echo "$current_version" | grep -oP '(\d+)')

    if [[ $proceed != "y" ]]; then
        message "Skipping $template without changes."
        return 0
    fi

    local new_num=$((current_num + 1))
    local new_release="fedora-$new_num"

    if [[ $clone == "y" ]]; then
        qvm-clone "$template" "$new_template_name"
    else
        new_template_name=$template
    fi

    message "Allocating additional space..."
    truncate -s 5GB /var/tmp/template-upgrade-cache.img
    local dev=$(sudo losetup -f --show /var/tmp/template-upgrade-cache.img)

    message "Attaching block to $new_template_name"
    qvm-start "$new_template_name"
    qvm-block attach "$new_template_name" dom0:"${dev##*/}"
    qvm-run -p "$new_template_name" -u root "mkfs.ext4 /dev/xvdi"
    qvm-run -p "$new_template_name" -u root "mount /dev/xvdi /mnt/removable"

    message "Performing upgrade. Patience..."
    if qvm-run -p "$new_template_name" -u root "dnf clean all && dnf --releasever=$new_num distro-sync --best --allowerasing -y"; then
        qvm-run -p "$new_template_name" -u root "dnf update -y && dnf upgrade -y"
        qvm-run -p "$new_template_name" "cat /etc/fedora-release"
        qvm-shutdown "$new_template_name"
        sleep 2
        message "Removing temporary cache..."
        sudo losetup -d "$dev"
        rm -f /var/tmp/template-upgrade-cache.img
        qvm-features "$new_template_name" template-name "$new_template_name"
        sleep 2
        message "Upgrade completed successfully!"
    else
        message "Upgrade failed. Check the template for issues."
        exit 1
    fi

prompt_user() {
    local current_version=$(qvm-run -p "$template" "cat /etc/fedora-release")
    local current_num=$(echo "$current_version" | grep -oP '(\d+)')
    message "Current version of $template is: Fedora release $current_num ${YELLOW}"
    read -p "Proceed with the upgrade? (y/n): " proceed
    if [[ $proceed != "y" ]]; then
        message "Skipping $template without changes."
        exit 0
    fi
    read -p "Do you want to clone the template before upgrading? (y/n): " clone
}

get_new_template_name() {
    if [[ $clone == "y" ]]; then
        read -p "What should be the new template name? " new_template_name
        echo $new_template_name
    else
        echo $1
    fi
}

change_qvm_features() {
    local template=$1
    local new_template_name=$2
    local version_number=${new_template_name##*-}
    local six_months_later=$(date -d "+6 months" +%Y-%m-%d)

    qvm-features $template name $new_template_name
    qvm-features $template os-version $version_number
    qvm-features $template template-summary "Qubes template for $new_template_name"
    qvm-features $template template-description "Qubes template for $new_template_name"
    qvm-features $template os-eol $six_months_later
}

main() {
    if [ $# -eq 0 ]; then
        echo "Error: No template specified." >&2
        usage
        exit 1
    fi

    for template in "$@"; do
        prompt_user
        new_template_name=$(get_new_template_name "$template")
        upgrade_template "$template" "$proceed" "$clone" "$new_template_name"
        change_qvm_features "$template" "$new_template_name"
    done
}

main "$@"
